// This documented is created using this spec: https://facebook.github.io/jsx/
// PARSER_PACKAGE="me.tobiasliese.JX";

// since the char fields of the Java.ccc files are private I'm using the Identifier token instead of redifining them according to the jsx docs

INJECT JxExpression : implements PrimaryExpression

JxExpression :(
	JxElement | JxFragment
);

INJECT JxElement : implements PrimaryExpression
// 1.2 JX Elements
JxElement:(
	JxOpeningElement [SCAN JxChildren => JxChildren] JxClosingElement
  |
  JxSelfClosingElement
  // todo Assert that the opening and closing element names are the same
);

JxSelfClosingElement :
  <LT> JxElementName [SCAN JxAttributes => JxAttributes] <SLASH> <GT>
;

JxOpeningElement :
  <LT> JxElementName [SCAN JxAttributes => JxAttributes] <GT>
;

JxClosingElement :
 <LT> <SLASH> JxElementName <GT>
;

JxFragment : (
  <LT> <GT>
  JxChildren
  <LT> <SLASH> <GT>
)
;

JxElementName : (
  <IDENTIFIER>
  |
  JxNamespacedName
  |
  JxMemberExpression
);

JxNamespacedName :
  <IDENTIFIER> <COLON> <IDENTIFIER>
;

JxMemberExpression :
  <IDENTIFIER> <DOT> <IDENTIFIER>
;

// 1.3 Jx Attributes
JxAttributes :
  (SCAN JxSpreadAttribute => JxSpreadAttribute | SCAN JxAttribute => JxAttribute)*
;

JxSpreadAttribute :
  <LBRACE> <DOT><DOT><DOT> AssignmentExpression <RBRACE>
;

JxAttribute :
  JxAttributeName [JxAttributeInitializer]
;

JxAttributeName :(
  <IDENTIFIER>
  |
  JxNamespacedName
);

JxAttributeInitializer :
  <EQ> JxAttributeValue =>||
;

JxAttributeValue :(
  "\"" [JxDoubleStringCharacters] "\""
  |
  "\'" [JxSingleStringCharacters] "\'"
  |
  <LBRACE> AssignmentExpression <RBRACE>
  |
  JxElement
  |
  JxFragment
);

JxDoubleStringCharacters :
  <IDENTIFIER>
;

JxSingleStringCharacters :
  <IDENTIFIER>
;

// 1.4 Children
JxChildren :
	 (SCAN JxChild => JxChild)*
;

JxChild :(
  <LBRACE> [SCAN JxChildExpression => JxChildExpression] <RBRACE>
  |
  SCAN JxElement => JxElement
  |
  SCAN JxFragment => JxFragment
  |
  JxText
);

JxText :
  <IDENTIFIER>
;

JxChildExpression :(
  AssignmentExpression
  |
  <DOT><DOT><DOT> AssignmentExpression
);
